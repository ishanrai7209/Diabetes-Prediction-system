# -*- coding: utf-8 -*-
"""Diabetes Prediction project .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cuEQ0sSBlJSBPVc2r56R6T4uEHOYUwPK
"""

import numpy as np
import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn import svm
from sklearn.metrics import accuracy_score

diabetes_data = pd.read_csv('/content/diabetes.csv')

X = diabetes_data.drop(columns = 'Outcome', axis=1)
Y = diabetes_data['Outcome']

scaler = StandardScaler()

standardtized_data = scaler.fit_transform(X)

print(standardtized_data)

X = standardtized_data
Y = diabetes_data['Outcome']

print(X)
print(Y)

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size = 0.2, stratify=Y, random_state=2)

print(X.shape, X_train.shape, X_test.shape)

classify = svm.SVC(kernel='linear')

classify.fit(X_train, Y_train)

X_train_prediction = classify.predict(X_train)
training_data_accuracy = accuracy_score(X_train_prediction, Y_train)

print("Accuracy of the training data: ", training_data_accuracy)

X_test_prediction = classify.predict(X_test)
test_data_accuracy = accuracy_score(X_test_prediction, Y_test)

print("Accuracy of the test data: ", test_data_accuracy)

input_val = (8,183,64,0,0,23.3,0.672,32)


val = np.asarray(input_val)


val_rs = val.reshape(1,-1)


std_data = scaler.transform(val_rs)
print(std_data)

prediction = classify.predict(std_data)
print(prediction)

if (prediction[0] == 0):
  print('The person is not diabetic')
elif (prediction[0]==1):
  print('The person is diabetic')